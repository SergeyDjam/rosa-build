- title = title_object(@mass_build)
- set_meta_tags title: title
- set_meta_tags og:      { title:       title,
                           description: truncate(@mass_build.description, length: 255) }
- set_meta_tags twitter: { title:       title,
                           description: truncate(@mass_build.description, length: 200) }

= render 'submenu'

.col-xs-12.col-md-10.col-md-offset-1
  .row
    h3
      = t('activerecord.models.mass_build')

    table.table.table-striped
      tr
        td
          b= t('activerecord.attributes.mass_build.name')
        td= link_to_mass_build(@mass_build)
      tr
        td
          b= t('activerecord.attributes.mass_build.id')
        td= @mass_build.id
      tr
        td
          b= t('activerecord.attributes.mass_build.arch_names')
        td= @mass_build.arch_names
      tr
        td
          b= t('activerecord.attributes.mass_build.build_for_platform')
        td= link_to @mass_build.build_for_platform.name, platform_path(@mass_build.build_for_platform)
      - if @mass_build.external_nodes.present?
        tr
          td
            b= t('activerecord.attributes.build_list.external_nodes')
          td= I18n.t("layout.build_lists.external_nodes.#{@mass_build.external_nodes}")
      tr
        td
          b= t('activerecord.attributes.mass_build.auto_publish_status')
        td= t("layout.build_lists.auto_publish_status.#{@mass_build.auto_publish_status}")
      tr
        td
          b= t('activerecord.attributes.mass_build.auto_create_container')
        td= t("layout.#{@mass_build.auto_create_container?}_")
      tr
        td
          b= t('activerecord.attributes.mass_build.increase_release_tag')
        td= t("layout.#{@mass_build.increase_release_tag?}_")
      tr
        td
          b= t('activerecord.attributes.mass_build.include_testing_subrepository')
        td= t("layout.#{@mass_build.include_testing_subrepository?}_")
      tr
        td
          b= t('activerecord.attributes.mass_build.use_cached_chroot')
        td= t("layout.#{@mass_build.use_cached_chroot?}_")
      tr
        td
          b= t('activerecord.attributes.mass_build.use_extra_tests')
        td= t("layout.#{@mass_build.use_extra_tests?}_")
      tr
        td
          b= t('activerecord.attributes.mass_build.created_at')
        td= @mass_build.created_at
      tr
        td
          b= t('activerecord.attributes.mass_build.description')
        td= @mass_build.description

      tr
        td
          b= t("activerecord.attributes.build_list.extra_repositories")
        td
          - if @mass_build.extra_repositories.present?
            - Repository.where(id: @mass_build.extra_repositories).each do |repo|
              p= link_to "#{repo.platform.name}/#{repo.name}", [repo.platform, repo]
          - else
            = t('layout.false_')

      tr
        td
          b= t("activerecord.attributes.build_list.extra_mass_builds")
        td
          - if @mass_build.extra_mass_builds.present?
            - MassBuild.where(id: @mass_build.extra_mass_builds).each do |mb|
              p= link_to "#{mb.id} - #{mb.name}", platform_mass_build_path(mb.save_to_platform, mb)
          - else
            = t('layout.false_')

      tr
        td
          b= t("activerecord.attributes.build_list.extra_build_lists")
        td
          - if @mass_build.extra_build_lists.present?
            - BuildList.where(id: @mass_build.extra_build_lists).each do |bl|
              p= link_to "#{bl.id} (#{bl.project.name} - #{bl.arch.name})", bl
          - else
            = t('layout.false_')

      tr
        td
        td
      tr
        td
          b= t('layout.mass_builds.statuses')
        td
      - MassBuild::COUNT_STATUSES.each do |status|
        - path = build_lists_path+"#?#{{filter: {mass_build_id: @mass_build.id, ownership: 'everything'}.merge(status != :build_lists ? {status: BuildList.status_by_human(status)} : {})}.to_param}"
        tr
          td
            = link_to t("layout.build_lists.statuses.#{status}") + ": ", path
          td= @mass_build.send "#{status}_count"

      tr
        td
        td
      tr
        td
          b= t('layout.mass_builds.lists')
        td
          - if @mass_build.projects_list.present?
            = link_to_list @platform, @mass_build, 'projects_list'
            | &nbsp;
          = link_to_list @platform, @mass_build, 'failed_builds_list'
          | &nbsp;
          = link_to_list @platform, @mass_build, 'tests_failed_builds_list'
          | &nbsp;
          = link_to_list @platform, @mass_build, 'success_builds_list'

    .buttons_block
      - if policy(@mass_build).publish?
        - unless @mass_build.auto_publish_status == BuildList::AUTO_PUBLISH_STATUS_DEFAULT
          = link_to t('layout.mass_builds.publish_success'),
            publish_platform_mass_build_path(@platform, @mass_build.id),
            method: :post,
            data:   { confirm: t("layout.confirm") },
            class:  'btn btn-success'
          hr
        = link_to t('layout.mass_builds.publish_test_failed'),
          publish_platform_mass_build_path(@platform, @mass_build.id, status: 'test_failed'),
          method: :post,
          data:   { confirm: t("layout.confirm") },
          class:  'btn btn-warning'
        hr
      - if policy(@mass_build).cancel?
        = link_to t('layout.cancel'),
          cancel_platform_mass_build_path(@platform, @mass_build.id),
          method: :post,
          class:  'btn btn-danger',
          data:   { confirm: t('layout.mass_builds.cancel_confirm') }
        hr
      - if policy(@mass_build).create?
        = link_to t('layout.mass_builds.recreate'),
          new_platform_mass_build_path(@platform, mass_build_id: @mass_build.id),
          class: 'btn btn-primary'
        hr
      - if policy(@mass_build).show_fail_reason? && @mass_build.build_error_count > 0
        = link_to t('layout.mass_builds.show_fail_reason_link'),
          show_fail_reason_platform_mass_build_path,
          class: 'btn btn-info'
        hr
        - url = show_fail_reason_platform_mass_build_path(id: @mass_build.id, format: 'csv')
        h3
          = t('layout.mass_builds.csv_generator.title')
        h4
          = t('layout.mass_builds.csv_generator.description')
        = simple_form_for 'csv', url: url, method: :get, html: { class: 'form-inline' } do |f|
          = f.input :log_name, required: false, label: t('layout.mass_builds.csv_generator.log_name'), input_html: { value: 'script_output.log' }
          |&nbsp;
          = f.input 'CSV', label: false, input_html: { type: 'submit', class: 'btn btn-info', value: t('layout.mass_builds.csv_generator.submit') }
