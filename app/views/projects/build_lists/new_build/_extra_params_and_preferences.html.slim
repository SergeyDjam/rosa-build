h4= t('activerecord.attributes.build_list.extra_params.label')
- BuildList::EXTRA_PARAMS.each do |field|
  - text = params[:build_list].try(:[], :extra_params).try(:[], field)
  = text_field_tag "build_list[extra_params][#{field}]", text,
      placeholder: t("activerecord.attributes.build_list.extra_params.#{field}"),
      class: 'form-control'

h4.offset10= t("activerecord.attributes.build_list.preferences")
- selected = params[:build_list].try(:[], :auto_publish_status) ? {selected: params[:build_list][:auto_publish_status]} : {}
.form-group
  = f.label :auto_publish_status
  = f.select :auto_publish_status, auto_publish_statuses, {},
             class: 'form-control', 'ng-value' => 'newBuildCtrl.auto_publish_status',
             'ng-model' => 'newBuildCtrl.auto_publish_status',
             'ng-disabled' => '!newBuildCtrl.save_to_repository.publish_without_qa'

.checkbox
  label
    input[type=     'checkbox'
          ng-model= 'newBuildCtrl.auto_create_container'
          ng-value= 'newBuildCtrl.auto_create_container'
          name=     'build_list[auto_create_container]' ]
    = BuildList.human_attribute_name :auto_create_container

- %i(include_testing_subrepository use_cached_chroot use_extra_tests save_buildroot).each do |kind|
  .checkbox
    label
      - checked = params[:build_list].try(:[], kind)
      - checked = @build_list.send(kind) if checked.nil?
      = f.check_box kind, {}, "true", "false"
      = BuildList.human_attribute_name kind

- selected = params[:build_list].try(:[], :external_nodes)
- selected = current_user.builds_setting.try(:external_nodes) if selected.nil?
- selected = selected && { selected: selected } || {}
= f.label :external_nodes
= f.select :external_nodes, external_nodes,
  selected.merge(include_blank: true),
  class: 'form-control'
